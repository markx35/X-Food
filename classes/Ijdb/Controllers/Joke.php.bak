<?php
namespace Ijdb\Controllers;
use \Ninja\DatabaseTable;
use \Ninja\Authentication;

class order {
	private $authorsTable;
	private $OrdersTable;

	public function __construct(DatabaseTable $OrdersTable, DatabaseTable $authorsTable, Authentication $authentication) {
		$this->OrdersTable = $OrdersTable;
		$this->authorsTable = $authorsTable;
		$this->authentication = $authentication;
	}

	public function list() {
		$result = $this->OrdersTable->findAll();

		$Orders = [];
		foreach ($result as $Order) {
			$author = $this->authorsTable->findById($Order['authorId']);

			$Orders[] = [
				'id' => $Order['id'],
				'Ordertext' => $Order['Ordertext'],
				'Orderdate' => $Order['Orderdate'],
				'f_name' => $author['f_name'],
                //yxie - use firstname and lastname
                'l_name' => $author['l_name'],
                'email' => $author['email'],
				'authorId' => $author['id']
			];

		}
		$title = 'order list';

		$totalOrders = $this->OrdersTable->total();

		$author = $this->authentication->getUser();

		return ['template' => 'Orders.html.php', 
				'title' => $title, 
				'variables' => [
						'totalOrders' => $totalOrders,
						'Orders' => $Orders,
						'userId' => $author['id'] ?? null
					]
				];
	}

	public function home() {
		$title = 'X-Food';

		return ['template' => 'home.html.php', 'title' => $title];
	}
	public function Order() {
		$title = 'order';

		return ['template' => 'menu.html.php', 'title' => $title];
	}
	public function checkout() {
		$title = 'Checkout';

		return ['template' => 'Order.html.php', 'title' => $title];
	}


	public function delete() {

		$author = $this->authentication->getUser();

		$Order = $this->OrdersTable->findById($_POST['id']);

		if ($Order['authorId'] != $author['id']) {
			return;
		}
		

		$this->OrdersTable->delete($_POST['id']);
        //header('location: /Order/list'); 5/25/18 JG DEL1L  org
		header('location: index.php?Order/list');  // 5/25/18 JG NEW1L  		
	}

	public function saveEdit() {
		$author = $this->authentication->getUser();


		if (isset($_GET['id'])) {
			$Order = $this->OrdersTable->findById($_GET['id']);

			if ($Order['authorId'] != $author['id']) {
				return;
			}
		}

		$Order = $_POST['Order'];
		$Order['Orderdate'] = new \DateTime();
		$Order['authorId'] = $author['id'];

		$this->OrdersTable->save($Order);
		//header('location: /Order/list'); 5/25/18 JG DEL1L  org
		header('location: index.php?Order/list');  //5/25/18 JG NEW1L  
		
	}

	public function edit() {
		$author = $this->authentication->getUser();

		if (isset($_GET['id'])) {
			$Order = $this->OrdersTable->findById($_GET['id']);
		}

		$title = 'Edit Order';

		return ['template' => 'editOrder.html.php',
				'title' => $title,
				'variables' => [
						'Order' => $Order ?? null,
						'userId' => $author['id'] ?? null
					]
				];
	}
	
}